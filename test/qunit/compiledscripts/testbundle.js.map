{"version":3,"file":"testbundle.js","sourceRoot":"","sources":["../../../src/client/scripts/stopbystop-interfaces.ts","../../../src/client/scripts/Telemetry.ts","../../../src/client/scripts/Utils.ts","../../../src/client/scripts/AppState.ts","../scripts/UtilsTests.ts","../scripts/main.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"tsdef/jquery.d.ts\"/>\n\n\"use strict\";\n\nmodule StopByStop {\n    export interface IInitUrls {\n        BaseUrl: string;\n        BaseImageUrl: string;\n\n        RouteDataUrlV2: string;\n        PlacesDataUrlV2: string;\n        PoiDataUrlV2: string;\n        PlacesNearbyDataUrlV2: string;\n\n        //image urls\n        CityImagesUrl: string;\n    }\n\n    export interface IAppState {\n        basePortalUrl: string;\n        baseDataUrl: string;\n        baseImageUrl: string;\n        windowOpenTarget: string;\n        urls?: IInitUrls;\n        pageInfo?: IPageInfo;\n        navigationLocation?: ISBSNavigationLocation;\n        knownHashChangeInProgress?: boolean;\n        historyDisabled?: boolean;\n        metadata: IMetadata;\n    }\n\n    export interface IWebInitData {\n        /** page */\n        p: SBSPage;\n        /** route id */\n        rid: string;\n        /** route */\n        r: IRoute;\n        /** exit id */\n        exd: string;\n        /** poi type */\n        pt: PoiType;\n        /** base data url */\n        durl: string;\n        /** base image url */\n        iurl: string;\n        /** base portal url */\n        purl: string;\n        /** metadata */\n        m: IMetadata;\n\n    }\n\n    export interface ILocation {\n        /** latitude */\n        a: number;\n        /** longitude */\n        o: number;\n        /** place description */\n        pd?: string;\n    };\n\n    export interface IRouteSegment {\n        /** highway name */\n        hn: string;\n        /* ref */\n        r: string;\n        /** start */\n        s: ILocation;\n        /** end */\n        e: ILocation;\n        /** distance */\n        d: number;\n        /** portion completed */\n        pc: number;\n        /** start index */\n        si: number;\n        /** end index */\n        ei: number;\n        /** maneuver */\n        m: string;\n        /** instructions */\n        i: string;\n        /** junction */\n        j: IRouteJunction[];\n    }\n\n    export interface IReviewGroup {\n        /** id */\n        id: string;\n        /** name */\n        n: string;\n        /** image url */\n        iu: string;\n        /** icon */\n        i: string;\n        /** review count */\n        rc: number;\n        /** review page url */\n        u: string;\n        /** rating image url */\n        riu: string;\n        /** rating */\n        r: number;\n    }\n\n    export interface IPoi {\n        /** sbsid */\n        id: string;\n        /** poi category ids */\n        c: number[];\n        /** poi type */\n        t: PoiType;\n        /** name */\n        n: string;\n        /** description */\n        d: string;\n        /** poi location */\n        l: ILocation;\n        /** phone number */\n        p: string;\n        /** url name */\n        un: string;\n        /** open hours */\n        oh: number[];\n        /** primary properties */\n        pp: { [id: string]: any }\n        /** secondary properties */\n        sp: { [id: string]: any }\n    }\n\n    export interface IPoiCategory {\n        /** sbsid */\n        id: number;\n        /** name */\n        n: string;\n        /** poi type */\n        pt: PoiType;\n    }\n\n    export interface IPoiCategoryOccurrence {\n        /** category */\n        cat: IPoiCategory;\n        /** count of occurrences */\n        c: number;\n    }\n\n    export interface IPoiOnJunction {\n        /** distance from junction */\n        dfj: number;\n        /** poi */\n        p: IPoi;\n        /** visibility flag */\n        v: boolean;\n\n    }\n\n    export interface IJunction {\n        /** name */\n        n: string;\n        /** index */\n        i: number;\n        /** osmid */\n        oid: number;\n        /** highway name */\n        hn: string;\n        /** ref */\n        r: string;\n        /** location */\n        l: ILocation;\n        /** exit to */\n        et: string;\n        /** exit to left */\n        etl: string;\n        /** exit to right */\n        etr: string;\n        /** pois */\n        p: IPoiOnJunction[];\n    }\n\n    export interface IRouteJunction {\n        /** distance from route start */\n        dfrs: number;\n        /** time from route start */\n        tfrs: number;\n        /** junction */\n        j: IJunction;\n    }\n\n    export enum PoiType {\n        restaurants = 1,\n        gasstations = 2,\n        hotels = 4,\n        sights = 8,\n        all = restaurants | gasstations | hotels | sights\n    }\n\n    export interface IRoute {\n        /** from location */\n        fl: ILocation;\n        /** to location */\n        tl: ILocation;\n        /** current location */\n        cl: ILocation;\n        /** route id */\n        rid: string;\n        /** distance */\n        d: number;\n        /** time */\n        t: number;\n        /** route segments */\n        s: IRouteSegment[];\n        /** metadata */\n        m: IMetadata;\n    }\n\n    export enum SBSPage {\n        home = 0,\n        route = 1,\n        exit = 2,\n        poi = 3,\n        about = 4\n    }\n\n    export interface IPageInfo {\n        /** page name */\n        pageName: string;\n        /** telemetry page name */\n        telemetryPageName: string;\n    }\n\n    export interface ISBSNavigationLocation {\n        /** page */\n        page: SBSPage,\n        /** route id */\n        routeId?: string;\n        /** exit id */\n        exitId?: string;\n        /** POI type */\n        poiType?: PoiType;\n        /** POI id */\n        poiId?: string;\n        /** POI path */\n        poiPath?: string;\n    }\n\n    export interface IPoiPropertyMetadata {\n        id?: string;\n        /** name */\n        n: string;\n        /** values by id */\n        v?: { [id: number]: IPoiPropertyValueMetadata };\n        /** is primary property */\n        fp?: boolean;\n    }\n\n    export interface IPoiPropertyValueMetadata {\n        /** id */\n        id: number;\n        /** name */\n        n: string;\n    }\n\n    export interface IRootPoiCategory {\n        /** poi type */\n        t: PoiType;\n\n        /** category id */\n        c: number;\n\n        /** show subcategories in filters */\n        scf: boolean;\n\n        /** name */\n        n: string;\n\n        /** property metadata */\n        p: IPoiPropertyMetadata[];\n    }\n\n        export interface IMetadata {\n        /** category metadata */\n        c: { [id: number]: IPoiCategory };\n        /** root categories by type id */\n        rpc: { [id: number]: IRootPoiCategory };\n        /** all properties by id */\n        ppm: { [id: string]: IPoiPropertyMetadata };\n    }\n\n    export enum PoiIconFormat {\n        Light = 1,\n        Dark = 2,\n        Map = 4\n    }\n\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\n/// <reference path=\"tsdef/ai.d.ts\"/>\n\nmodule StopByStop {\n    export enum TelemetryEvent {\n        Add5MinToStop,\n        AddStopToRoute,\n        CityDropdownClick,\n        FilterButtonClick,\n        FilterButtonInlineExitPageClick,\n        FilterMaxDistanceFromJunctionChanged,\n        FilterShowGasStationsChanged,\n        FilterShowRestaurantsChanged,\n        LocationIN,\n        LocationOUT,\n        LocationOUTPopupDisplayed,\n        NonBounce,\n        POIGroupPageScroll,\n        POIGroupSwitchList,\n        POIGroupSwitchMap,\n        POIPageAddToRouteClick,\n        POIPageNavigateClick,\n        POIPageNavigateBeforeDirect,\n        Remove5MinFromStop,\n        RemoveStopFromRoute,\n        RoutePageScroll,\n        RoutePlanNavigateClick,\n        RoutePlanNavigateBeforeDirect,\n        ShowStopSettingsPopup,\n        SideBarThumbTouch,\n        SocialButtonClick,\n        StopPopupNavigateClick,\n        StopPopupNavigateBeforeDirect,\n        TelLinkClick,\n        ViewTripButtonClick,\n        YelpLinkClick,\n    }\n\n    export enum TelemetryProperty {\n        FilterVisibility,\n        LoadStopsFromCache,\n        PageName,\n        StopCount,\n        NavigationUrl\n    }\n\n    export enum TelemetryMeasurement {\n    }\n\n    export class Telemetry {\n        public static _appInsights: Microsoft.ApplicationInsights.IAppInsights = window[\"appInsights\"];\n\n        public static trackPageView(\n            pageName: string,\n            url: string,\n            duration?: number,\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\n            flush: boolean = false\n        ): void {\n\n            try {\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\n                Telemetry._appInsights.trackPageView(pageName, url, aiProps, aiMeasurements, duration);\n\n                if (flush) {\n                    Telemetry._appInsights.flush();\n                }\n            }\n            catch (ex) {\n                Telemetry.logFatal(ex);\n            }\n        }\n\n        public static trackEvent(\n            telemetryEvent: TelemetryEvent,\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\n            flush: boolean = false\n        ): void {\n\n            try {\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\n                Telemetry._appInsights.trackEvent(TelemetryEvent[telemetryEvent], aiProps, aiMeasurements);\n\n                if (flush) {\n                    Telemetry._appInsights.flush();\n                }\n            }\n            catch (ex) {\n                Telemetry.logFatal(ex);\n            }\n        }\n\n        public static trackError(\n            error: Error,\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\n            flush: boolean = false\n        ): void {\n            try {\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\n                Telemetry.logFatal(error);\n                Telemetry._appInsights.trackException(error, \"\", aiProps, aiMeasurements);\n                if (flush) {\n                    Telemetry._appInsights.flush();\n                }\n            }\n            catch (ex) {\n                Telemetry.logFatal(ex);\n            }\n        }\n\n        public static logToConsole(message: string) {\n            if (window.console) {\n                window.console.log(message);\n            }\n        }\n\n        private static getAIProperties(telemetryProperties: [{ k: TelemetryProperty, v: string }]): { [name: string]: string; } {\n            var aiProps: { [name: string]: string; } = {\n            };\n            aiProps[TelemetryProperty[TelemetryProperty.PageName]] = AppState.current.pageInfo.telemetryPageName;\n            if (telemetryProperties) {\n                $.each(telemetryProperties, (i, v) => { aiProps[TelemetryProperty[v.k]] = v.v; });\n            }\n            return aiProps;\n        }\n\n        private static getAIMeasurements(telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }]): { [name: string]: number; } {\n            var aiMeasurements: { [name: string]: number; } = {};\n            if (telemetryMeasurements) {\n                $.each(telemetryMeasurements, (i, v) => { aiMeasurements[TelemetryMeasurement[v.k]] = v.v; });\n            }\n            return aiMeasurements;\n        }\n\n        private static logFatal(message: any) {\n            Telemetry.logErrorToConsole(\"ERROR-TO-TELEMETRY:\" + message);\n        }\n\n       \n        private static logErrorToConsole(err: any) {\n            if (window.console && window.console.error) {\n                if (err.message) {\n                    window.console.error(err.message);\n                } else {\n                    window.console.error(err);\n                }\n            }\n        }\n    }\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\n/// <reference path=\"tsdef/jquerymobile.d.ts\"/>\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\n\nmodule StopByStop {\n    export const PAGENAME_HOME = \"sbs-homePG\";\n    export const PAGENAME_Route = \"route-page\";\n    export const PAGENAME_POIGroup = \"poigroup-page\";\n    export const PAGENAME_Exit = \"exit-page\";\n    export const PAGENAME_About = \"about-page\";\n    export const N_LAT_BOUNDARY = 50.00;\n    export const S_LAT_BOUNDARY = 25.00;\n    export const W_LON_BOUNDARY = -125.00;\n    export const E_LON_BOUNDARY = -66.00;\n    export const ROUTE_PLAN_STORAGE_KEY = \"sbsroutes\";\n\n    export class Utils {\n        public static getNonHighwayDrivingTimeToPlaceInSeconds(distance: number): number {\n            // for now let's assume 20mph non-highway speed\n            return distance / 20 * 3600;\n        }\n\n        public static updateNavigationLocation(hash: string, navigationLocation: ISBSNavigationLocation): void {\n            if (!hash) {\n                hash = \"#home\";\n            }\n            hash = hash.toLowerCase();\n            var hashIndex = hash.indexOf(\"#\");\n            var queryStringPart: string = null;\n\n            if (hashIndex < 0) {\n                hash = \"#home\";\n                hashIndex = 0;\n            }\n\n            if (hashIndex >= 0) {\n                var indexOfPageNameEnd = hash.indexOf(\"&\", hashIndex) - 1;\n                if (indexOfPageNameEnd < 0) {\n                    indexOfPageNameEnd = hash.length - 1;\n                } else {\n                    queryStringPart = hash.substr(indexOfPageNameEnd + 1);\n                }\n                var pageName = hash.substr(hashIndex + 1, indexOfPageNameEnd - hashIndex);\n                if (SBSPage[pageName] !== undefined) {\n                    navigationLocation.page = SBSPage[pageName];\n                }\n\n                if (queryStringPart) {\n                    var queryStringParameterPairs: string[] = queryStringPart.split(\"&\");\n                    for (var i = 0; i < queryStringParameterPairs.length; i++) {\n                        var qsParts = queryStringParameterPairs[i].split(\"=\");\n                        if (qsParts.length === 2) {\n                            var parameter = qsParts[0];\n                            var val = qsParts[1];\n                            switch (parameter) {\n                                case \"routeid\":\n                                    navigationLocation.routeId = val;\n                                    navigationLocation.poiType = undefined;\n                                    break;\n                                case \"exitid\":\n                                    navigationLocation.exitId = val;\n                                    break;\n                                case \"poiid\":\n                                    navigationLocation.poiId = val;\n                                case \"poitype\":\n                                    navigationLocation.poiType = PoiType.all;\n                                    if (val) {\n                                        navigationLocation.poiType = PoiType[val] || navigationLocation.poiType;\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        public static getHashFromNavigationLocation(navigationLocation: ISBSNavigationLocation): string {\n            var loc = \"#\";\n\n            if (SBSPage[navigationLocation.page]) {\n                loc += SBSPage[navigationLocation.page];\n            } else {\n                loc += \"home\";\n            }\n\n            if (navigationLocation.routeId) {\n                loc += (\"&routeid=\" + navigationLocation.routeId);\n            }\n\n            if (navigationLocation.exitId &&\n                (navigationLocation.page === SBSPage.exit || navigationLocation.page === SBSPage.poi)) {\n                loc += (\"&exitid=\" + navigationLocation.exitId);\n            }\n\n            if (navigationLocation.poiId && navigationLocation.page === SBSPage.poi) {\n                loc += (\"&poiid=\" + navigationLocation.poiId);\n            }\n\n            if (navigationLocation.poiType && navigationLocation.page === SBSPage.exit && PoiType[navigationLocation.poiType]) {\n                loc += (\"&poitype=\" + PoiType[navigationLocation.poiType]);\n            }\n\n            return loc.toLowerCase();\n        }\n\n        public static getMileString(distance: number): string {\n            if (distance < 0.1) {\n                return \"<0.1mi\";\n            }\n\n            return distance.toString() + \"mi\";\n        }\n\n        public static getHours(seconds: number): number {\n            return Math.floor(((seconds % 31536000) % 86400) / 3600);\n        }\n\n        public static getMinutes(seconds: number): number {\n            return Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n        }\n\n        public static getTimeString(time: Date, msOffset: number = 0): string {\n            time = new Date(time.getTime() + msOffset);\n            return Utils.formatTime(time);\n        }\n\n        public static formatTime(date: Date) {\n            var hours = date.getHours();\n            var minutes = date.getMinutes();\n            var minutesString: string = minutes.toString();\n            var ampm = hours >= 12 ? \"pm\" : \"am\";\n            hours = hours % 12;\n            if (hours === 0) {\n                hours = 12;\n            }\n\n            if (minutes < 10) {\n                minutesString = \"0\" + minutesString;\n            }\n            return hours.toString() + \":\" + minutesString + \" \" + ampm;\n\n        }\n\n        // http://stackoverflow.com/questions/3219758/detect-changes-in-the-dom\n        public static observeDOM: (obj: Element, callback: () => void) => void = (() => {\n            var MutationObserver = (<any>window).MutationObserver || (<any>window).WebKitMutationObserver,\n                eventListenerSupported = window.addEventListener;\n\n            return function (obj, callback) {\n                if (MutationObserver) {\n                    // define a new observer\n                    var obs = new MutationObserver(function (mutations, observer) {\n                        if (mutations[0].addedNodes.length || mutations[0].removedNodes.length)\n                            callback();\n                    });\n                    // have the observer observe foo for changes in children\n                    obs.observe(obj, { childList: true, subtree: true });\n                }\n                else if (eventListenerSupported) {\n                    obj.addEventListener('DOMNodeInserted', callback, false);\n                    obj.addEventListener('DOMNodeRemoved', callback, false);\n                }\n            }\n        })();\n\n        public static hasAnyOwnProperties(obj: Object): boolean {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        public static runOnce<T>(func: (...args: any[]) => T): (...args: any[]) => T {\n            var ran = false;\n            var memo: T;\n            return function (...args: any[]) {\n                if (!ran) {\n                    ran = true;\n                    memo = func.apply(this, arguments);\n                }\n                return memo;\n            };\n        };\n\n        public static spaPageNavigate(\n            navigationLocation: ISBSNavigationLocation,\n            changeHash: boolean = true): void {\n            var pageId = \"#home\";\n            switch (navigationLocation.page) {\n                case SBSPage.about:\n                    pageId = \"#about\";\n                    break;\n                case SBSPage.exit:\n                    pageId = \"#exit\";\n                    break;\n                case SBSPage.poi:\n                    pageId = \"#poi\";\n                    break;\n                case SBSPage.route:\n                    pageId = \"#route\";\n                    break;\n            }\n\n            var dataUrl = pageId;\n            if (navigationLocation.routeId) {\n                dataUrl += \"&routeid=\" + navigationLocation.routeId;\n            }\n            if (navigationLocation.exitId) {\n                dataUrl += \"&exitid=\" + navigationLocation.exitId;\n            }\n            if (navigationLocation.poiType) {\n                dataUrl += \"&poitype=\" + PoiType[navigationLocation.poiType].toLowerCase();\n            }\n            if (navigationLocation.poiId) {\n                dataUrl += \"&poiId=\" + navigationLocation.poiId;\n            }\n\n            var reverse = (AppState.current.navigationLocation && AppState.current.navigationLocation.page > navigationLocation.page);\n\n            AppState.current.knownHashChangeInProgress = true;\n\n            $.mobile.pageContainer.pagecontainer(\n                \"change\",\n                pageId, { dataUrl: dataUrl, changeHash: changeHash, transition: \"slide\", reverse: reverse });\n        }\n\n        public static getShareUrl(basePortalUrl: string, navLocation: ISBSNavigationLocation) {\n            var shareUrl = basePortalUrl;\n            if (shareUrl.substr(shareUrl.length - 1) !== \"/\") {\n                shareUrl += \"/\";\n            }\n\n            switch (navLocation.page) {\n                case SBSPage.route:\n                case SBSPage.exit:\n                    shareUrl += \"route/\" + navLocation.routeId;\n\n                    if (navLocation.page === SBSPage.exit) {\n                        shareUrl += \"/exit/osm-\" + navLocation.exitId;\n\n                        if (navLocation.poiType) {\n                            shareUrl += \"/\" + PoiType[navLocation.poiType];\n                        }\n                    }\n                    break;\n                case SBSPage.poi:\n                    shareUrl += \"poi/\" + navLocation.poiPath;\n                    break;\n            }\n\n            return shareUrl;\n        }\n\n        public static getRouteTitleFromRouteId(routeId: string): string {\n            var routeTitle = \"\";\n\n            if (routeId && routeId.indexOf(\"-to-\") > 1) {\n                var fromAndTo = routeId.split(\"-to-\");\n                var fromString = fromAndTo[0];\n                var toString = fromAndTo[1];\n\n                if (fromString.length > 1 && toString.length > 1) {\n                    if ($.isNumeric(fromString[0])) {\n                        fromString = \"your location\";\n                    } else {\n                        fromString = Utils.getPlaceNameFromPlaceId(fromString);\n                    }\n                }\n\n                toString = Utils.getPlaceNameFromPlaceId(toString);\n                if (fromString && toString) {\n                    routeTitle = \"from \" + fromString + \" to \" + toString;\n                } else {\n                    routeTitle = \"\";\n                }\n            }\n\n            return routeTitle;\n        }\n\n        public static isHistoryAPISupported(): boolean {\n            return !!(window.history && history.pushState);\n        }\n\n        public static windowOpen(url: string) {\n            if (AppState.current.windowOpenTarget === \"_blank\") {\n                window.location.assign(url);\n            } else {\n                window.open(url, AppState.current.windowOpenTarget, \"location=yes\");\n            }\n        }\n\n        public static getPoiIconUrl(poiType: PoiType, iconFormat: PoiIconFormat, baseImageUrl: string) {\n            var poiTypeString = PoiType[poiType].toLowerCase();\n            return baseImageUrl + \"poi/\" + poiTypeString + \"/\" + poiTypeString + \"_\" + iconFormat.toString() + \".png\";\n        }\n\n        public static getNavigationUrlFromCurrentLocation(...stops: ILocation[]): JQueryPromise<string> {\n            var deferred = $.Deferred<string>();\n            if (stops && stops.length > 0) {\n                if (navigator && navigator.geolocation) {\n                    navigator.geolocation.getCurrentPosition(\n                        (position: Position) => {\n                            var srcLat = position.coords.latitude;\n                            var srcLon = position.coords.longitude;\n\n                            var daddrStr = \"\";\n                            for (var i = 0; i < stops.length - 1; i++) {\n                                if (i > 0) {\n                                    daddrStr += \"+to:\";\n                                }\n                                daddrStr += (stops[i].a + \",\" + stops[i].o);\n                            }\n\n                            if (daddrStr !== \"\") {\n                                daddrStr += \"+to:\";\n                            }\n\n                            var destination = stops[stops.length - 1];\n                            daddrStr += destination.a + \",\" + destination.o;\n                            var navigationUrl = \"https://maps.google.com/maps?saddr=\"\n                                + srcLat + \",\"\n                                + srcLon + \"&daddr=\"\n                                + daddrStr;\n                            deferred.resolve(navigationUrl);\n                        },\n                        (positionError: PositionError) => {\n                            var error = positionError.message;\n                            Telemetry.trackError(new Error(\"getCurrentPositionError: \" + error));\n                            console.error(\"Please allow StopByStop.com to share your location.\");\n                            deferred.reject(error);\n                        });\n                }\n            } else {\n                deferred.reject();\n            }\n            return deferred.promise();\n        }\n\n        private static getPlaceNameFromPlaceId(placeId: string) {\n            var placeName = \"\";\n            var usIndex = placeId.indexOf(\"-united-states\");\n            if (usIndex > 0) {\n                placeId = placeId.substr(0, usIndex);\n\n                var state = placeId.substr(placeId.length - 2, 2).toUpperCase();\n                placeId = placeId.substr(0, placeId.length - 3);\n                placeId = placeId.replace(/-/g, ' ');\n                placeName = placeId.replace(/([^ \\t]+)/g, (_, word: string) => {\n                    return word[0].toUpperCase() + word.substr(1);\n                }) + \", \" + state;\n            }\n\n            return placeName;\n        }\n\n\n    }\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\n/// <reference path=\"tsdef/jquerymobile.d.ts\"/>\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\n/// <reference path=\"Telemetry.ts\"/>\n/// <reference path=\"Utils.ts\"/>\n/// <reference path=\"stopbystop-interfaces.ts\"/>\n\nmodule StopByStop {\n\n    export class AppState {\n        public static current: IAppState = {\n            basePortalUrl: null,\n            baseDataUrl: null,\n            baseImageUrl: null,\n            windowOpenTarget: \"_system\",\n            metadata: null\n        };\n    }\n}","/// <reference path=\"../../../src/client/scripts/tsdef/qunit.d.ts\"/>\n/// <reference path=\"../../../src/client/scripts/tsdef/sinon.d.ts\"/>\n/// <reference path=\"../../../src/client/scripts/tsdef/jquery.d.ts\"/>\n/// <reference path=\"../../../src/client/scripts/tsdef/knockout-3.3.d.ts\"/>\n/// <reference path=\"../../../src/client/scripts/tsdef/google.maps.d.ts\"/>\n\n/// <reference path=\"../../../src/client/scripts/stopbystop-interfaces.ts\"/>\n/// <reference path=\"../../../src/client/scripts/AppState.ts\"/>\n/// <reference path=\"../../../src/client/scripts/Utils.ts\"/>\n\n\"use strict\";\nmodule StopByStop {\n\n    QUnit.begin(() => {\n        AppState.current.pageInfo = {\n            pageName: \"TestPageName\",\n            telemetryPageName: \"TestPageName\"\n        };\n    });\n\n    QUnit.test(\"Utils: ParseUrlForNavigationLocation test\", (assert) => {\n        updateAndVerifyNavigationLocation(assert, \"#route\", { page: SBSPage.home }, { page: SBSPage.route });\n        updateAndVerifyNavigationLocation(assert, \"#route&routeId=route1\", { page: SBSPage.home }, { page: SBSPage.route, routeId: \"route1\", poiType: undefined });\n        updateAndVerifyNavigationLocation(assert, \"https://hostname.com/page\", { page: SBSPage.route, routeId: \"route1\" }, { page: SBSPage.home, routeId: \"route1\" });\n        updateAndVerifyNavigationLocation(assert, \"#exit&routeId=route1&exitId=exit1&poiType=gasstations\", { page: SBSPage.home }, { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations });\n        updateAndVerifyNavigationLocation(assert, \"#exit&routeId=route1&exitId=exit1&poiType=factory\", { page: SBSPage.home }, { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.all });\n    });\n\n    QUnit.test(\"Utils: GetHashFromNavigationLocation test\", (assert) => {\n        assert.equal(Utils.getHashFromNavigationLocation({ page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"#exit&routeid=route1&exitid=exit1&poitype=gasstations\");\n        assert.equal(Utils.getHashFromNavigationLocation({ page: SBSPage.route, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"#route&routeid=route1\");\n    });\n\n\n    QUnit.test(\"Utils: GetShareUrl test\", (assert) => {\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1/exit/osm-exit1/gasstations\");\n        assert.equal(Utils.getShareUrl(\"https://www.host.com/\", { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1/exit/osm-exit1/gasstations\");\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.about, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/\");\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.home, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/\");\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.route, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1\");\n    });\n\n\n    QUnit.test(\"Utils: GetRouteTitleFromRouteId test\", (assert) => {\n        assert.equal(Utils.getRouteTitleFromRouteId(\"47.68950,-122.03859-to-new-york-city-ny-united-states\"), \"from your location to New York City, NY\");\n        assert.equal(Utils.getRouteTitleFromRouteId(\"tacoma-wa-united-states-to-new-york-city-ny-united-states\"), \"from Tacoma, WA to New York City, NY\");\n        assert.equal(Utils.getRouteTitleFromRouteId(\"\"), \"\");\n        assert.equal(Utils.getRouteTitleFromRouteId(\"10-to-10\"), \"\");\n    });\n\n    QUnit.test(\"Utils: runOnce test\", (assert) => {\n        var callback = sinon.spy();\n        var proxy = Utils.runOnce(callback);\n        proxy();\n        proxy();\n        assert.equal(callback.callCount, 1);\n\n    });\n\n    QUnit.test(\"Utils: getNavigationUrlFromCurrentLocation test\", (assert) => {\n        var fakeSuccessGetCurrentPosition = (\n            successCallback: PositionCallback,\n            errorCallback?: PositionErrorCallback,\n            options?: PositionOptions): void => {\n            successCallback(<Position>{\n                coords: <Coordinates>{\n                    latitude: 45.0,\n                    longitude: -100.0\n                }\n            });\n        };\n\n        var fakeFailGetCurrentPosition = (\n            successCallback: PositionCallback,\n            errorCallback?: PositionErrorCallback,\n            options?: PositionOptions): void => {\n            errorCallback({\n                code: 1,\n                message: \"Unavailable\",\n                PERMISSION_DENIED: 0,\n                POSITION_UNAVAILABLE: 0,\n                TIMEOUT: 0\n            });\n        };\n\n\n        var loc1: ILocation = {\n            a: 44,\n            o: -100\n        };\n\n        var loc2: ILocation = {\n            a: 43,\n            o: -100\n        };\n\n        var navLocationStub = sinon.stub(navigator.geolocation, \"getCurrentPosition\", fakeSuccessGetCurrentPosition);\n        var d1 = assert.async();\n        Utils.getNavigationUrlFromCurrentLocation(loc1).then((val: string) => {\n            assert.equal(val, \"https://maps.google.com/maps?saddr=45,-100&daddr=44,-100\");\n            assert.equal(navLocationStub.callCount, 1);\n            d1();\n        });\n\n        var d2 = assert.async();\n        Utils.getNavigationUrlFromCurrentLocation(loc1, loc2).then((val: string) => {\n            assert.equal(val, \"https://maps.google.com/maps?saddr=45,-100&daddr=44,-100+to:43,-100\");\n            assert.equal(navLocationStub.callCount, 2);\n            d2();\n        });\n\n        navLocationStub.restore();\n        navLocationStub = sinon.stub(navigator.geolocation, \"getCurrentPosition\", fakeFailGetCurrentPosition);\n        var d3 = assert.async();\n\n        var successCb = sinon.spy();\n        var errorCb = sinon.spy();\n\n        Utils.getNavigationUrlFromCurrentLocation(loc1)\n            .done(successCb)\n            .fail(errorCb)\n            .always((val: string) => {\n                assert.equal(val, \"Unavailable\");\n                assert.equal(navLocationStub.callCount, 1);\n                assert.equal(successCb.callCount, 0);\n                assert.equal(errorCb.callCount, 1);\n                d3();\n            });\n\n        navLocationStub.restore();\n\n\n    });\n\n    function updateAndVerifyNavigationLocation(assert: QUnitAssert, hash: string, inputLocation: ISBSNavigationLocation, expectedLocation: ISBSNavigationLocation): void {\n        Utils.updateNavigationLocation(hash, inputLocation);\n        assert.deepEqual(inputLocation, expectedLocation);\n    }\n}\n\n","/// <reference path=\"UtilsTests.ts\" />"]}