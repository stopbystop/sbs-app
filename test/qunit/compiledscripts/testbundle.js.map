{"version":3,"file":"testbundle.js","sourceRoot":"","sources":["../../../src/client/scripts/stopbystop-interfaces.ts","../../../src/client/scripts/Telemetry.ts","../../../src/client/scripts/Utils.ts","../../../src/client/scripts/AppState.ts","../scripts/UtilsTests.ts","../scripts/main.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"tsdef/jquery.d.ts\"/>\r\n\r\n\"use strict\";\r\n\r\nmodule StopByStop {\r\n    export interface IInitUrls {\r\n        BaseUrl: string;\r\n        BaseImageUrl: string;\r\n\r\n        RouteDataUrlV2: string;\r\n        PlacesDataUrlV2: string;\r\n        PoiDataUrlV2: string;\r\n        PlacesNearbyDataUrlV2: string;\r\n\r\n        //image urls\r\n        CityImagesUrl: string;\r\n    }\r\n\r\n    export interface IAppState {\r\n        basePortalUrl: string;\r\n        baseDataUrl: string;\r\n        baseImageUrl: string;\r\n        windowOpenTarget: string;\r\n        urls?: IInitUrls;\r\n        pageInfo?: IPageInfo;\r\n        navigationLocation?: ISBSNavigationLocation;\r\n        knownHashChangeInProgress?: boolean;\r\n        historyDisabled?: boolean;\r\n        metadata: IMetadata;\r\n    }\r\n\r\n    export interface IWebInitData {\r\n        /** page */\r\n        p: SBSPage;\r\n        /** route id */\r\n        rid: string;\r\n        /** route */\r\n        r: IRoute;\r\n        /** exit id */\r\n        exd: string;\r\n        /** poi type */\r\n        pt: PoiType;\r\n        /** base data url */\r\n        durl: string;\r\n        /** base image url */\r\n        iurl: string;\r\n        /** base portal url */\r\n        purl: string;\r\n        /** metadata */\r\n        m: IMetadata;\r\n\r\n    }\r\n\r\n    export interface ILocation {\r\n        /** latitude */\r\n        a: number;\r\n        /** longitude */\r\n        o: number;\r\n        /** place description */\r\n        pd?: string;\r\n    };\r\n\r\n    export interface IRouteSegment {\r\n        /** highway name */\r\n        hn: string;\r\n        /* ref */\r\n        r: string;\r\n        /** start */\r\n        s: ILocation;\r\n        /** end */\r\n        e: ILocation;\r\n        /** distance */\r\n        d: number;\r\n        /** portion completed */\r\n        pc: number;\r\n        /** start index */\r\n        si: number;\r\n        /** end index */\r\n        ei: number;\r\n        /** maneuver */\r\n        m: string;\r\n        /** instructions */\r\n        i: string;\r\n        /** junction */\r\n        j: IRouteJunction[];\r\n    }\r\n\r\n    export interface IReviewGroup {\r\n        /** id */\r\n        id: string;\r\n        /** name */\r\n        n: string;\r\n        /** image url */\r\n        iu: string;\r\n        /** icon */\r\n        i: string;\r\n        /** review count */\r\n        rc: number;\r\n        /** review page url */\r\n        u: string;\r\n        /** rating image url */\r\n        riu: string;\r\n        /** rating */\r\n        r: number;\r\n    }\r\n\r\n    export interface IPoi {\r\n        /** sbsid */\r\n        id: string;\r\n        /** poi category ids */\r\n        c: number[];\r\n        /** poi type */\r\n        t: PoiType;\r\n        /** name */\r\n        n: string;\r\n        /** description */\r\n        d: string;\r\n        /** poi location */\r\n        l: ILocation;\r\n        /** phone number */\r\n        p: string;\r\n        /** url name */\r\n        un: string;\r\n        /** open hours */\r\n        oh: number[];\r\n        /** primary properties */\r\n        pp: { [id: string]: any }\r\n        /** secondary properties */\r\n        sp: { [id: string]: any }\r\n    }\r\n\r\n    export interface IPoiCategory {\r\n        /** sbsid */\r\n        id: number;\r\n        /** name */\r\n        n: string;\r\n        /** poi type */\r\n        pt: PoiType;\r\n    }\r\n\r\n    export interface IPoiCategoryOccurrence {\r\n        /** category */\r\n        cat: IPoiCategory;\r\n        /** count of occurrences */\r\n        c: number;\r\n    }\r\n\r\n    export interface IPoiOnJunction {\r\n        /** distance from junction */\r\n        dfj: number;\r\n        /** poi */\r\n        p: IPoi;\r\n        /** visibility flag */\r\n        v: boolean;\r\n\r\n    }\r\n\r\n    export interface IJunction {\r\n        /** name */\r\n        n: string;\r\n        /** index */\r\n        i: number;\r\n        /** osmid */\r\n        oid: number;\r\n        /** highway name */\r\n        hn: string;\r\n        /** ref */\r\n        r: string;\r\n        /** location */\r\n        l: ILocation;\r\n        /** exit to */\r\n        et: string;\r\n        /** exit to left */\r\n        etl: string;\r\n        /** exit to right */\r\n        etr: string;\r\n        /** pois */\r\n        p: IPoiOnJunction[];\r\n    }\r\n\r\n    export interface IRouteJunction {\r\n        /** distance from route start */\r\n        dfrs: number;\r\n        /** time from route start */\r\n        tfrs: number;\r\n        /** junction */\r\n        j: IJunction;\r\n    }\r\n\r\n    export enum PoiType {\r\n        restaurants = 1,\r\n        gasstations = 2,\r\n        hotels = 4,\r\n        sights = 8,\r\n        all = restaurants | gasstations | hotels | sights\r\n    }\r\n\r\n    export interface IRoute {\r\n        /** from location */\r\n        fl: ILocation;\r\n        /** to location */\r\n        tl: ILocation;\r\n        /** current location */\r\n        cl: ILocation;\r\n        /** route id */\r\n        rid: string;\r\n        /** distance */\r\n        d: number;\r\n        /** time */\r\n        t: number;\r\n        /** route segments */\r\n        s: IRouteSegment[];\r\n        /** metadata */\r\n        m: IMetadata;\r\n    }\r\n\r\n    export enum SBSPage {\r\n        home = 0,\r\n        route = 1,\r\n        exit = 2,\r\n        poi = 3,\r\n        about = 4\r\n    }\r\n\r\n    export interface IPageInfo {\r\n        /** page name */\r\n        pageName: string;\r\n        /** telemetry page name */\r\n        telemetryPageName: string;\r\n    }\r\n\r\n    export interface ISBSNavigationLocation {\r\n        /** page */\r\n        page: SBSPage,\r\n        /** route id */\r\n        routeId?: string;\r\n        /** exit id */\r\n        exitId?: string;\r\n        /** POI type */\r\n        poiType?: PoiType;\r\n        /** POI id */\r\n        poiId?: string;\r\n        /** POI path */\r\n        poiPath?: string;\r\n    }\r\n\r\n    export interface IPoiPropertyMetadata {\r\n        id?: string;\r\n        /** name */\r\n        n: string;\r\n        /** values by id */\r\n        v?: { [id: number]: IPoiPropertyValueMetadata };\r\n        /** is primary property */\r\n        fp?: boolean;\r\n    }\r\n\r\n    export interface IPoiPropertyValueMetadata {\r\n        /** id */\r\n        id: number;\r\n        /** name */\r\n        n: string;\r\n    }\r\n\r\n    export interface IRootPoiCategory {\r\n        /** poi type */\r\n        t: PoiType;\r\n\r\n        /** category id */\r\n        c: number;\r\n\r\n        /** show subcategories in filters */\r\n        scf: boolean;\r\n\r\n        /** name */\r\n        n: string;\r\n\r\n        /** property metadata */\r\n        p: IPoiPropertyMetadata[];\r\n    }\r\n\r\n        export interface IMetadata {\r\n        /** category metadata */\r\n        c: { [id: number]: IPoiCategory };\r\n        /** root categories by type id */\r\n        rpc: { [id: number]: IRootPoiCategory };\r\n        /** all properties by id */\r\n        ppm: { [id: string]: IPoiPropertyMetadata };\r\n    }\r\n\r\n    export enum PoiIconFormat {\r\n        Light = 1,\r\n        Dark = 2,\r\n        Map = 4\r\n    }\r\n\r\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\r\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\r\n/// <reference path=\"tsdef/ai.d.ts\"/>\r\n\r\nmodule StopByStop {\r\n    export enum TelemetryEvent {\r\n        Add5MinToStop,\r\n        AddStopToRoute,\r\n        CityDropdownClick,\r\n        FilterButtonClick,\r\n        FilterButtonInlineExitPageClick,\r\n        FilterMaxDistanceFromJunctionChanged,\r\n        FilterShowGasStationsChanged,\r\n        FilterShowRestaurantsChanged,\r\n        LocationIN,\r\n        LocationOUT,\r\n        LocationOUTPopupDisplayed,\r\n        NonBounce,\r\n        POIGroupPageScroll,\r\n        POIGroupSwitchList,\r\n        POIGroupSwitchMap,\r\n        POIPageAddToRouteClick,\r\n        POIPageNavigateClick,\r\n        POIPageNavigateBeforeDirect,\r\n        Remove5MinFromStop,\r\n        RemoveStopFromRoute,\r\n        RoutePageScroll,\r\n        RoutePlanNavigateClick,\r\n        RoutePlanNavigateBeforeDirect,\r\n        ShowStopSettingsPopup,\r\n        SideBarThumbTouch,\r\n        SocialButtonClick,\r\n        StopPopupNavigateClick,\r\n        StopPopupNavigateBeforeDirect,\r\n        TelLinkClick,\r\n        ViewTripButtonClick,\r\n        YelpLinkClick,\r\n    }\r\n\r\n    export enum TelemetryProperty {\r\n        FilterVisibility,\r\n        LoadStopsFromCache,\r\n        PageName,\r\n        StopCount,\r\n        NavigationUrl\r\n    }\r\n\r\n    export enum TelemetryMeasurement {\r\n    }\r\n\r\n    export class Telemetry {\r\n        public static _appInsights: Microsoft.ApplicationInsights.IAppInsights = window[\"appInsights\"];\r\n\r\n        public static trackPageView(\r\n            pageName: string,\r\n            url: string,\r\n            duration?: number,\r\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\r\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\r\n            flush: boolean = false\r\n        ): void {\r\n\r\n            try {\r\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\r\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\r\n                Telemetry._appInsights.trackPageView(pageName, url, aiProps, aiMeasurements, duration);\r\n\r\n                if (flush) {\r\n                    Telemetry._appInsights.flush();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                Telemetry.logFatal(ex);\r\n            }\r\n        }\r\n\r\n        public static trackEvent(\r\n            telemetryEvent: TelemetryEvent,\r\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\r\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\r\n            flush: boolean = false\r\n        ): void {\r\n\r\n            try {\r\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\r\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\r\n                Telemetry._appInsights.trackEvent(TelemetryEvent[telemetryEvent], aiProps, aiMeasurements);\r\n\r\n                if (flush) {\r\n                    Telemetry._appInsights.flush();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                Telemetry.logFatal(ex);\r\n            }\r\n        }\r\n\r\n        public static trackError(\r\n            error: Error,\r\n            telemetryProperties: [{ k: TelemetryProperty, v: string }] = null,\r\n            telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }] = null,\r\n            flush: boolean = false\r\n        ): void {\r\n            try {\r\n                var aiProps = Telemetry.getAIProperties(telemetryProperties);\r\n                var aiMeasurements = Telemetry.getAIMeasurements(telemetryMeasurements);\r\n                Telemetry.logFatal(error);\r\n                Telemetry._appInsights.trackException(error, \"\", aiProps, aiMeasurements);\r\n                if (flush) {\r\n                    Telemetry._appInsights.flush();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                Telemetry.logFatal(ex);\r\n            }\r\n        }\r\n\r\n        public static logToConsole(message: string) {\r\n            if (window.console) {\r\n                window.console.log(message);\r\n            }\r\n        }\r\n\r\n        private static getAIProperties(telemetryProperties: [{ k: TelemetryProperty, v: string }]): { [name: string]: string; } {\r\n            var aiProps: { [name: string]: string; } = {\r\n            };\r\n            aiProps[TelemetryProperty[TelemetryProperty.PageName]] = AppState.current.pageInfo.telemetryPageName;\r\n            if (telemetryProperties) {\r\n                $.each(telemetryProperties, (i, v) => { aiProps[TelemetryProperty[v.k]] = v.v; });\r\n            }\r\n            return aiProps;\r\n        }\r\n\r\n        private static getAIMeasurements(telemetryMeasurements: [{ k: TelemetryMeasurement, v: number }]): { [name: string]: number; } {\r\n            var aiMeasurements: { [name: string]: number; } = {};\r\n            if (telemetryMeasurements) {\r\n                $.each(telemetryMeasurements, (i, v) => { aiMeasurements[TelemetryMeasurement[v.k]] = v.v; });\r\n            }\r\n            return aiMeasurements;\r\n        }\r\n\r\n        private static logFatal(message: any) {\r\n            Telemetry.logErrorToConsole(\"ERROR-TO-TELEMETRY:\" + message);\r\n        }\r\n\r\n       \r\n        private static logErrorToConsole(err: any) {\r\n            if (window.console && window.console.error) {\r\n                if (err.message) {\r\n                    window.console.error(err.message);\r\n                } else {\r\n                    window.console.error(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\r\n/// <reference path=\"tsdef/jquerymobile.d.ts\"/>\r\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\r\n\r\nmodule StopByStop {\r\n    export const PAGENAME_HOME = \"sbs-homePG\";\r\n    export const PAGENAME_Route = \"route-page\";\r\n    export const PAGENAME_POIGroup = \"poigroup-page\";\r\n    export const PAGENAME_Exit = \"exit-page\";\r\n    export const PAGENAME_About = \"about-page\";\r\n    export const N_LAT_BOUNDARY = 50.00;\r\n    export const S_LAT_BOUNDARY = 25.00;\r\n    export const W_LON_BOUNDARY = -125.00;\r\n    export const E_LON_BOUNDARY = -66.00;\r\n    export const ROUTE_PLAN_STORAGE_KEY = \"sbsroutes\";\r\n\r\n    export class Utils {\r\n        public static getNonHighwayDrivingTimeToPlaceInSeconds(distance: number): number {\r\n            // for now let's assume 20mph non-highway speed\r\n            return distance / 20 * 3600;\r\n        }\r\n\r\n        public static updateNavigationLocation(hash: string, navigationLocation: ISBSNavigationLocation): void {\r\n            if (!hash) {\r\n                hash = \"#home\";\r\n            }\r\n            hash = hash.toLowerCase();\r\n            var hashIndex = hash.indexOf(\"#\");\r\n            var queryStringPart: string = null;\r\n\r\n            if (hashIndex < 0) {\r\n                hash = \"#home\";\r\n                hashIndex = 0;\r\n            }\r\n\r\n            if (hashIndex >= 0) {\r\n                var indexOfPageNameEnd = hash.indexOf(\"&\", hashIndex) - 1;\r\n                if (indexOfPageNameEnd < 0) {\r\n                    indexOfPageNameEnd = hash.length - 1;\r\n                } else {\r\n                    queryStringPart = hash.substr(indexOfPageNameEnd + 1);\r\n                }\r\n                var pageName = hash.substr(hashIndex + 1, indexOfPageNameEnd - hashIndex);\r\n                if (SBSPage[pageName] !== undefined) {\r\n                    navigationLocation.page = SBSPage[pageName];\r\n                }\r\n\r\n                if (queryStringPart) {\r\n                    var queryStringParameterPairs: string[] = queryStringPart.split(\"&\");\r\n                    for (var i = 0; i < queryStringParameterPairs.length; i++) {\r\n                        var qsParts = queryStringParameterPairs[i].split(\"=\");\r\n                        if (qsParts.length === 2) {\r\n                            var parameter = qsParts[0];\r\n                            var val = qsParts[1];\r\n                            switch (parameter) {\r\n                                case \"routeid\":\r\n                                    navigationLocation.routeId = val;\r\n                                    navigationLocation.poiType = undefined;\r\n                                    break;\r\n                                case \"exitid\":\r\n                                    navigationLocation.exitId = val;\r\n                                    break;\r\n                                case \"poiid\":\r\n                                    navigationLocation.poiId = val;\r\n                                case \"poitype\":\r\n                                    navigationLocation.poiType = PoiType.all;\r\n                                    if (val) {\r\n                                        navigationLocation.poiType = PoiType[val] || navigationLocation.poiType;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        public static getHashFromNavigationLocation(navigationLocation: ISBSNavigationLocation): string {\r\n            var loc = \"#\";\r\n\r\n            if (SBSPage[navigationLocation.page]) {\r\n                loc += SBSPage[navigationLocation.page];\r\n            } else {\r\n                loc += \"home\";\r\n            }\r\n\r\n            if (navigationLocation.routeId) {\r\n                loc += (\"&routeid=\" + navigationLocation.routeId);\r\n            }\r\n\r\n            if (navigationLocation.exitId &&\r\n                (navigationLocation.page === SBSPage.exit || navigationLocation.page === SBSPage.poi)) {\r\n                loc += (\"&exitid=\" + navigationLocation.exitId);\r\n            }\r\n\r\n            if (navigationLocation.poiId && navigationLocation.page === SBSPage.poi) {\r\n                loc += (\"&poiid=\" + navigationLocation.poiId);\r\n            }\r\n\r\n            if (navigationLocation.poiType && navigationLocation.page === SBSPage.exit && PoiType[navigationLocation.poiType]) {\r\n                loc += (\"&poitype=\" + PoiType[navigationLocation.poiType]);\r\n            }\r\n\r\n            return loc.toLowerCase();\r\n        }\r\n\r\n        public static getMileString(distance: number): string {\r\n            if (distance < 0.1) {\r\n                return \"<0.1mi\";\r\n            }\r\n\r\n            return distance.toString() + \"mi\";\r\n        }\r\n\r\n        public static getHours(seconds: number): number {\r\n            return Math.floor(((seconds % 31536000) % 86400) / 3600);\r\n        }\r\n\r\n        public static getMinutes(seconds: number): number {\r\n            return Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\r\n        }\r\n\r\n        public static getTimeString(time: Date, msOffset: number = 0): string {\r\n            time = new Date(time.getTime() + msOffset);\r\n            return Utils.formatTime(time);\r\n        }\r\n\r\n        public static formatTime(date: Date) {\r\n            var hours = date.getHours();\r\n            var minutes = date.getMinutes();\r\n            var minutesString: string = minutes.toString();\r\n            var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n            hours = hours % 12;\r\n            if (hours === 0) {\r\n                hours = 12;\r\n            }\r\n\r\n            if (minutes < 10) {\r\n                minutesString = \"0\" + minutesString;\r\n            }\r\n            return hours.toString() + \":\" + minutesString + \" \" + ampm;\r\n\r\n        }\r\n\r\n        // http://stackoverflow.com/questions/3219758/detect-changes-in-the-dom\r\n        public static observeDOM: (obj: Element, callback: () => void) => void = (() => {\r\n            var MutationObserver = (<any>window).MutationObserver || (<any>window).WebKitMutationObserver,\r\n                eventListenerSupported = window.addEventListener;\r\n\r\n            return function (obj, callback) {\r\n                if (MutationObserver) {\r\n                    // define a new observer\r\n                    var obs = new MutationObserver(function (mutations, observer) {\r\n                        if (mutations[0].addedNodes.length || mutations[0].removedNodes.length)\r\n                            callback();\r\n                    });\r\n                    // have the observer observe foo for changes in children\r\n                    obs.observe(obj, { childList: true, subtree: true });\r\n                }\r\n                else if (eventListenerSupported) {\r\n                    obj.addEventListener('DOMNodeInserted', callback, false);\r\n                    obj.addEventListener('DOMNodeRemoved', callback, false);\r\n                }\r\n            }\r\n        })();\r\n\r\n        public static hasAnyOwnProperties(obj: Object): boolean {\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        public static runOnce<T>(func: (...args: any[]) => T): (...args: any[]) => T {\r\n            var ran = false;\r\n            var memo: T;\r\n            return function (...args: any[]) {\r\n                if (!ran) {\r\n                    ran = true;\r\n                    memo = func.apply(this, arguments);\r\n                }\r\n                return memo;\r\n            };\r\n        };\r\n\r\n        public static spaPageNavigate(\r\n            navigationLocation: ISBSNavigationLocation,\r\n            changeHash: boolean = true): void {\r\n            var pageId = \"#home\";\r\n            switch (navigationLocation.page) {\r\n                case SBSPage.about:\r\n                    pageId = \"#about\";\r\n                    break;\r\n                case SBSPage.exit:\r\n                    pageId = \"#exit\";\r\n                    break;\r\n                case SBSPage.poi:\r\n                    pageId = \"#poi\";\r\n                    break;\r\n                case SBSPage.route:\r\n                    pageId = \"#route\";\r\n                    break;\r\n            }\r\n\r\n            var dataUrl = pageId;\r\n            if (navigationLocation.routeId) {\r\n                dataUrl += \"&routeid=\" + navigationLocation.routeId;\r\n            }\r\n            if (navigationLocation.exitId) {\r\n                dataUrl += \"&exitid=\" + navigationLocation.exitId;\r\n            }\r\n            if (navigationLocation.poiType) {\r\n                dataUrl += \"&poitype=\" + PoiType[navigationLocation.poiType].toLowerCase();\r\n            }\r\n            if (navigationLocation.poiId) {\r\n                dataUrl += \"&poiId=\" + navigationLocation.poiId;\r\n            }\r\n\r\n            var reverse = (AppState.current.navigationLocation && AppState.current.navigationLocation.page > navigationLocation.page);\r\n\r\n            AppState.current.knownHashChangeInProgress = true;\r\n\r\n            $.mobile.pageContainer.pagecontainer(\r\n                \"change\",\r\n                pageId, { dataUrl: dataUrl, changeHash: changeHash, transition: \"slide\", reverse: reverse });\r\n        }\r\n\r\n        public static getShareUrl(basePortalUrl: string, navLocation: ISBSNavigationLocation) {\r\n            var shareUrl = basePortalUrl;\r\n            if (shareUrl.substr(shareUrl.length - 1) !== \"/\") {\r\n                shareUrl += \"/\";\r\n            }\r\n\r\n            switch (navLocation.page) {\r\n                case SBSPage.route:\r\n                case SBSPage.exit:\r\n                    shareUrl += \"route/\" + navLocation.routeId;\r\n\r\n                    if (navLocation.page === SBSPage.exit) {\r\n                        shareUrl += \"/exit/osm-\" + navLocation.exitId;\r\n\r\n                        if (navLocation.poiType) {\r\n                            shareUrl += \"/\" + PoiType[navLocation.poiType];\r\n                        }\r\n                    }\r\n                    break;\r\n                case SBSPage.poi:\r\n                    shareUrl += \"poi/\" + navLocation.poiPath;\r\n                    break;\r\n            }\r\n\r\n            return shareUrl;\r\n        }\r\n\r\n        public static getRouteTitleFromRouteId(routeId: string): string {\r\n            var routeTitle = \"\";\r\n\r\n            if (routeId && routeId.indexOf(\"-to-\") > 1) {\r\n                var fromAndTo = routeId.split(\"-to-\");\r\n                var fromString = fromAndTo[0];\r\n                var toString = fromAndTo[1];\r\n\r\n                if (fromString.length > 1 && toString.length > 1) {\r\n                    if ($.isNumeric(fromString[0])) {\r\n                        fromString = \"your location\";\r\n                    } else {\r\n                        fromString = Utils.getPlaceNameFromPlaceId(fromString);\r\n                    }\r\n                }\r\n\r\n                toString = Utils.getPlaceNameFromPlaceId(toString);\r\n                if (fromString && toString) {\r\n                    routeTitle = \"from \" + fromString + \" to \" + toString;\r\n                } else {\r\n                    routeTitle = \"\";\r\n                }\r\n            }\r\n\r\n            return routeTitle;\r\n        }\r\n\r\n        public static isHistoryAPISupported(): boolean {\r\n            return !!(window.history && history.pushState);\r\n        }\r\n\r\n        public static windowOpen(url: string) {\r\n            if (AppState.current.windowOpenTarget === \"_blank\") {\r\n                window.location.assign(url);\r\n            } else {\r\n                window.open(url, AppState.current.windowOpenTarget, \"location=yes\");\r\n            }\r\n        }\r\n\r\n        public static getPoiIconUrl(poiType: PoiType, iconFormat: PoiIconFormat, baseImageUrl: string) {\r\n            var poiTypeString = PoiType[poiType].toLowerCase();\r\n            return baseImageUrl + \"poi/\" + poiTypeString + \"/\" + poiTypeString + \"_\" + iconFormat.toString() + \".png\";\r\n        }\r\n\r\n        public static getNavigationUrlFromCurrentLocation(...stops: ILocation[]): JQueryPromise<string> {\r\n            var deferred = $.Deferred<string>();\r\n            if (stops && stops.length > 0) {\r\n                if (navigator && navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(\r\n                        (position: Position) => {\r\n                            var srcLat = position.coords.latitude;\r\n                            var srcLon = position.coords.longitude;\r\n\r\n                            var daddrStr = \"\";\r\n                            for (var i = 0; i < stops.length - 1; i++) {\r\n                                if (i > 0) {\r\n                                    daddrStr += \"+to:\";\r\n                                }\r\n                                daddrStr += (stops[i].a + \",\" + stops[i].o);\r\n                            }\r\n\r\n                            if (daddrStr !== \"\") {\r\n                                daddrStr += \"+to:\";\r\n                            }\r\n\r\n                            var destination = stops[stops.length - 1];\r\n                            daddrStr += destination.a + \",\" + destination.o;\r\n                            var navigationUrl = \"https://maps.google.com/maps?saddr=\"\r\n                                + srcLat + \",\"\r\n                                + srcLon + \"&daddr=\"\r\n                                + daddrStr;\r\n                            deferred.resolve(navigationUrl);\r\n                        },\r\n                        (positionError: PositionError) => {\r\n                            var error = positionError.message;\r\n                            Telemetry.trackError(new Error(\"getCurrentPositionError: \" + error));\r\n                            console.error(\"Please allow StopByStop.com to share your location.\");\r\n                            deferred.reject(error);\r\n                        });\r\n                }\r\n            } else {\r\n                deferred.reject();\r\n            }\r\n            return deferred.promise();\r\n        }\r\n\r\n        private static getPlaceNameFromPlaceId(placeId: string) {\r\n            var placeName = \"\";\r\n            var usIndex = placeId.indexOf(\"-united-states\");\r\n            if (usIndex > 0) {\r\n                placeId = placeId.substr(0, usIndex);\r\n\r\n                var state = placeId.substr(placeId.length - 2, 2).toUpperCase();\r\n                placeId = placeId.substr(0, placeId.length - 3);\r\n                placeId = placeId.replace(/-/g, ' ');\r\n                placeName = placeId.replace(/([^ \\t]+)/g, (_, word: string) => {\r\n                    return word[0].toUpperCase() + word.substr(1);\r\n                }) + \", \" + state;\r\n            }\r\n\r\n            return placeName;\r\n        }\r\n\r\n\r\n    }\r\n}","/// <reference path=\"tsdef/jquery.d.ts\"/>\r\n/// <reference path=\"tsdef/jquerymobile.d.ts\"/>\r\n/// <reference path=\"tsdef/knockout-3.3.d.ts\"/>\r\n/// <reference path=\"Telemetry.ts\"/>\r\n/// <reference path=\"Utils.ts\"/>\r\n/// <reference path=\"stopbystop-interfaces.ts\"/>\r\n\r\nmodule StopByStop {\r\n\r\n    export class AppState {\r\n        public static current: IAppState = {\r\n            basePortalUrl: null,\r\n            baseDataUrl: null,\r\n            baseImageUrl: null,\r\n            windowOpenTarget: \"_system\",\r\n            metadata: null\r\n        };\r\n    }\r\n}","/// <reference path=\"../../../src/client/scripts/tsdef/qunit.d.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/tsdef/sinon.d.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/tsdef/jquery.d.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/tsdef/knockout-3.3.d.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/tsdef/google.maps.d.ts\"/>\r\n\r\n/// <reference path=\"../../../src/client/scripts/stopbystop-interfaces.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/AppState.ts\"/>\r\n/// <reference path=\"../../../src/client/scripts/Utils.ts\"/>\r\n\r\n\"use strict\";\r\nmodule StopByStop {\r\n\r\n    QUnit.begin(() => {\r\n        AppState.current.pageInfo = {\r\n            pageName: \"TestPageName\",\r\n            telemetryPageName: \"TestPageName\"\r\n        };\r\n    });\r\n\r\n    QUnit.test(\"Utils: ParseUrlForNavigationLocation test\", (assert) => {\r\n        updateAndVerifyNavigationLocation(assert, \"#route\", { page: SBSPage.home }, { page: SBSPage.route });\r\n        updateAndVerifyNavigationLocation(assert, \"#route&routeId=route1\", { page: SBSPage.home }, { page: SBSPage.route, routeId: \"route1\", poiType: undefined });\r\n        updateAndVerifyNavigationLocation(assert, \"https://hostname.com/page\", { page: SBSPage.route, routeId: \"route1\" }, { page: SBSPage.home, routeId: \"route1\" });\r\n        updateAndVerifyNavigationLocation(assert, \"#exit&routeId=route1&exitId=exit1&poiType=gasstations\", { page: SBSPage.home }, { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations });\r\n        updateAndVerifyNavigationLocation(assert, \"#exit&routeId=route1&exitId=exit1&poiType=factory\", { page: SBSPage.home }, { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.all });\r\n    });\r\n\r\n    QUnit.test(\"Utils: GetHashFromNavigationLocation test\", (assert) => {\r\n        assert.equal(Utils.getHashFromNavigationLocation({ page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"#exit&routeid=route1&exitid=exit1&poitype=gasstations\");\r\n        assert.equal(Utils.getHashFromNavigationLocation({ page: SBSPage.route, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"#route&routeid=route1\");\r\n    });\r\n\r\n\r\n    QUnit.test(\"Utils: GetShareUrl test\", (assert) => {\r\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1/exit/osm-exit1/gasstations\");\r\n        assert.equal(Utils.getShareUrl(\"https://www.host.com/\", { page: SBSPage.exit, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1/exit/osm-exit1/gasstations\");\r\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.about, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/\");\r\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.home, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/\");\r\n        assert.equal(Utils.getShareUrl(\"https://www.host.com\", { page: SBSPage.route, routeId: \"route1\", exitId: \"exit1\", poiType: PoiType.gasstations }), \"https://www.host.com/route/route1\");\r\n    });\r\n\r\n\r\n    QUnit.test(\"Utils: GetRouteTitleFromRouteId test\", (assert) => {\r\n        assert.equal(Utils.getRouteTitleFromRouteId(\"47.68950,-122.03859-to-new-york-city-ny-united-states\"), \"from your location to New York City, NY\");\r\n        assert.equal(Utils.getRouteTitleFromRouteId(\"tacoma-wa-united-states-to-new-york-city-ny-united-states\"), \"from Tacoma, WA to New York City, NY\");\r\n        assert.equal(Utils.getRouteTitleFromRouteId(\"\"), \"\");\r\n        assert.equal(Utils.getRouteTitleFromRouteId(\"10-to-10\"), \"\");\r\n    });\r\n\r\n    QUnit.test(\"Utils: runOnce test\", (assert) => {\r\n        var callback = sinon.spy();\r\n        var proxy = Utils.runOnce(callback);\r\n        proxy();\r\n        proxy();\r\n        assert.equal(callback.callCount, 1);\r\n\r\n    });\r\n\r\n    QUnit.test(\"Utils: getNavigationUrlFromCurrentLocation test\", (assert) => {\r\n        var fakeSuccessGetCurrentPosition = (\r\n            successCallback: PositionCallback,\r\n            errorCallback?: PositionErrorCallback,\r\n            options?: PositionOptions): void => {\r\n            successCallback(<Position>{\r\n                coords: <Coordinates>{\r\n                    latitude: 45.0,\r\n                    longitude: -100.0\r\n                }\r\n            });\r\n        };\r\n\r\n        var fakeFailGetCurrentPosition = (\r\n            successCallback: PositionCallback,\r\n            errorCallback?: PositionErrorCallback,\r\n            options?: PositionOptions): void => {\r\n            errorCallback({\r\n                code: 1,\r\n                message: \"Unavailable\",\r\n                PERMISSION_DENIED: 0,\r\n                POSITION_UNAVAILABLE: 0,\r\n                TIMEOUT: 0\r\n            });\r\n        };\r\n\r\n\r\n        var loc1: ILocation = {\r\n            a: 44,\r\n            o: -100\r\n        };\r\n\r\n        var loc2: ILocation = {\r\n            a: 43,\r\n            o: -100\r\n        };\r\n\r\n        var navLocationStub = sinon.stub(navigator.geolocation, \"getCurrentPosition\", fakeSuccessGetCurrentPosition);\r\n        var d1 = assert.async();\r\n        Utils.getNavigationUrlFromCurrentLocation(loc1).then((val: string) => {\r\n            assert.equal(val, \"https://maps.google.com/maps?saddr=45,-100&daddr=44,-100\");\r\n            assert.equal(navLocationStub.callCount, 1);\r\n            d1();\r\n        });\r\n\r\n        var d2 = assert.async();\r\n        Utils.getNavigationUrlFromCurrentLocation(loc1, loc2).then((val: string) => {\r\n            assert.equal(val, \"https://maps.google.com/maps?saddr=45,-100&daddr=44,-100+to:43,-100\");\r\n            assert.equal(navLocationStub.callCount, 2);\r\n            d2();\r\n        });\r\n\r\n        navLocationStub.restore();\r\n        navLocationStub = sinon.stub(navigator.geolocation, \"getCurrentPosition\", fakeFailGetCurrentPosition);\r\n        var d3 = assert.async();\r\n\r\n        var successCb = sinon.spy();\r\n        var errorCb = sinon.spy();\r\n\r\n        Utils.getNavigationUrlFromCurrentLocation(loc1)\r\n            .done(successCb)\r\n            .fail(errorCb)\r\n            .always((val: string) => {\r\n                assert.equal(val, \"Unavailable\");\r\n                assert.equal(navLocationStub.callCount, 1);\r\n                assert.equal(successCb.callCount, 0);\r\n                assert.equal(errorCb.callCount, 1);\r\n                d3();\r\n            });\r\n\r\n        navLocationStub.restore();\r\n\r\n\r\n    });\r\n\r\n    function updateAndVerifyNavigationLocation(assert: QUnitAssert, hash: string, inputLocation: ISBSNavigationLocation, expectedLocation: ISBSNavigationLocation): void {\r\n        Utils.updateNavigationLocation(hash, inputLocation);\r\n        assert.deepEqual(inputLocation, expectedLocation);\r\n    }\r\n}\r\n\r\n","/// <reference path=\"UtilsTests.ts\" />"]}